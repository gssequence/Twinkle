<metro:MetroWindow x:Class="Twinkle.Views.MainWindow" x:Name="self"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:m="clr-namespace:Twinkle.Models"
        xmlns:v="clr-namespace:Twinkle.Views"
        xmlns:vm="clr-namespace:Twinkle.ViewModels"
        xmlns:c="clr-namespace:Twinkle.Views.Converters"
        xmlns:s="clr-namespace:Twinkle.Views.StyleSelectors"
        xmlns:u="clr-namespace:Twinkle.Views.UserControls"
        Title="Twinkle for Windows" Height="600" Width="800" UseLayoutRounding="True"
        GlowBrush="{DynamicResource AccentColorBrush}" TitleCaps="False">

  <Window.DataContext>
    <vm:MainWindowViewModel />
  </Window.DataContext>

  <Window.Resources>
    <CollectionViewSource x:Key="Accounts" Source="{Binding SettingsViewModel.Accounts}" />
    <s:AccountStyleSelecetor x:Key="AccountStyleSelector" />
  </Window.Resources>
  
  <metro:MetroWindow.RightWindowCommands>
    <metro:WindowCommands>
      <Button>
        <Button.Visibility>
          <Binding Path="SettingsViewModel.Accounts.Count">
            <Binding.Converter>
              <c:CountCollapseConverter IsInversed="True" />
            </Binding.Converter>
          </Binding>
        </Button.Visibility>
        <StackPanel Orientation="Horizontal">
          <Rectangle Width="16" Height="16" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
            <Rectangle.OpacityMask>
              <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_quill}" />
            </Rectangle.OpacityMask>
          </Rectangle>
          <TextBlock Text="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.ButtonNewTweet}" VerticalAlignment="Center" Margin="8, 0, 0, 0" />
        </StackPanel>
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="Click">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenComposeWindow" />
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </Button>
    </metro:WindowCommands>
  </metro:MetroWindow.RightWindowCommands>

  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Closed">
      <l:DataContextDisposeAction />
    </i:EventTrigger>
    <i:EventTrigger EventName="ContentRendered">
      <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
    </i:EventTrigger>
    <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="OpenOptionsWindowMessageKey">
      <l:TransitionInteractionMessageAction WindowType="{x:Type v:OptionWindow}" Mode="Modal" />
    </l:InteractionMessageTrigger>
    <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="OpenMessageWindowMessageKey">
      <l:TransitionInteractionMessageAction WindowType="{x:Type v:MessageWindow}" Mode="Modal" />
    </l:InteractionMessageTrigger>
    <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="OpenLoginWindowMessageKey">
      <l:TransitionInteractionMessageAction WindowType="{x:Type v:LoginWindow}" Mode="Modal" />
    </l:InteractionMessageTrigger>
    <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="OpenComposeWindowMessageKey">
      <l:TransitionInteractionMessageAction WindowType="{x:Type v:ComposeWindow}" Mode="Normal" />
    </l:InteractionMessageTrigger>
    <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="OpenAboutWindowMessageKey">
      <l:TransitionInteractionMessageAction WindowType="{x:Type v:AboutWindow}" Mode="Modal" />
    </l:InteractionMessageTrigger>
    <ei:KeyTrigger Modifiers="Control" Key="N">
      <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenComposeWindow" />
    </ei:KeyTrigger>
  </i:Interaction.Triggers>

  <DockPanel>
    <Menu DockPanel.Dock="Top" BorderBrush="LightGray" BorderThickness="0, 0, 0, 1">
      <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuFile}">
        <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuNewTweet}" InputGestureText="Ctrl+N">
          <MenuItem.IsEnabled>
            <Binding Path="SettingsViewModel.Accounts.Count">
              <Binding.Converter>
                <c:CountBoolConverter />
              </Binding.Converter>
            </Binding>
          </MenuItem.IsEnabled>
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenComposeWindow" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
        <Separator />
        <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuQuit}" InputGestureText="Alt+F4">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <l:WindowInteractionMessageAction>
                <l:DirectInteractionMessage>
                  <l:WindowActionMessage Action="Close" />
                </l:DirectInteractionMessage>
              </l:WindowInteractionMessageAction>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
      </MenuItem>
      <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuAccounts}" ItemContainerStyleSelector="{StaticResource AccountStyleSelector}">
        <MenuItem.Resources>
          <Style x:Key="accountStyle" x:Shared="false" TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}">
            <Setter Property="Header">
              <Setter.Value>
                <StackPanel Orientation="Vertical">
                  <TextBlock Text="{Binding UserName, Mode=OneWay}" />
                  <TextBlock Text="{Binding UserScreenNameWithAtSign, Mode=OneWay}" Opacity="0.5" FontSize="12" />
                </StackPanel>
              </Setter.Value>
            </Setter>
            <Setter Property="Icon">
              <Setter.Value>
                <u:WebImage SourceUri="{Binding UserProfileImageUrl}" Width="36" Height="36" Margin="4" />
              </Setter.Value>
            </Setter>
            <Setter Property="ItemsSource">
              <Setter.Value>
                <CompositeCollection>
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuGetHomeTimeline}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GetLatestTweets" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </MenuItem>
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuGetMyTweets}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GetMyTweets" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </MenuItem>
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuGetMentions}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GetMentions" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </MenuItem>
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuGetFavorites}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="GetFavorites" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </MenuItem>
                  <Separator />
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuStreamingNow}" IsEnabled="False">
                    <MenuItem.Visibility>
                      <Binding Path="IsConnectedToStream">
                        <Binding.Converter>
                          <l:VisibilityAndBooleanConverter ConvertWhenTrue="Visible" ConvertWhenFalse="Collapsed" />
                        </Binding.Converter>
                      </Binding>
                    </MenuItem.Visibility>
                  </MenuItem>
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuNotStreaming}" IsEnabled="False">
                    <MenuItem.Visibility>
                      <Binding Path="IsConnectedToStream">
                        <Binding.Converter>
                          <l:VisibilityAndBooleanConverter ConvertWhenTrue="Collapsed" ConvertWhenFalse="Visible" />
                        </Binding.Converter>
                      </Binding>
                    </MenuItem.Visibility>
                  </MenuItem>
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuConnectToStream}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ConnectToStream" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <MenuItem.Visibility>
                      <Binding Path="IsConnectedToStream">
                        <Binding.Converter>
                          <l:VisibilityAndBooleanConverter ConvertWhenTrue="Collapsed" ConvertWhenFalse="Visible" />
                        </Binding.Converter>
                      </Binding>
                    </MenuItem.Visibility>
                  </MenuItem>
                  <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuDisconnectFromStream}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="DisconnectFromStream" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <MenuItem.Visibility>
                      <Binding Path="IsConnectedToStream">
                        <Binding.Converter>
                          <l:VisibilityAndBooleanConverter ConvertWhenTrue="Visible" ConvertWhenFalse="Collapsed" />
                        </Binding.Converter>
                      </Binding>
                    </MenuItem.Visibility>
                  </MenuItem>
                </CompositeCollection>
              </Setter.Value>
            </Setter>
          </Style>
        </MenuItem.Resources>
        <MenuItem.ItemsSource>
          <CompositeCollection>
            <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuNoAccounts}" IsEnabled="False">
              <MenuItem.Visibility>
                <Binding Path="SettingsViewModel.Accounts.Count">
                  <Binding.Converter>
                    <c:CountCollapseConverter />
                  </Binding.Converter>
                </Binding>
              </MenuItem.Visibility>
            </MenuItem>
            <CollectionContainer Collection="{Binding Source={StaticResource Accounts}}" />
            <Separator />
            <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.AddModal}">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                  <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenLoginWindow" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </MenuItem>
          </CompositeCollection>
        </MenuItem.ItemsSource>
      </MenuItem>
      <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuTimelines}">
        <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuAdd}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="AddTimeline" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
      </MenuItem>
      <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuTools}">
        <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuOptions}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenOptionsWindow" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
      </MenuItem>
      <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuHelp}">
        <MenuItem Header="{Binding Source={x:Static m:GlobalizationService.Instance}, Path=Resources.MenuAbout}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="Click">
              <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenAboutWindow" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </MenuItem>
      </MenuItem>
    </Menu>
    <StatusBar DockPanel.Dock="Bottom" Background="{Binding ApplicationMessageService.LatestMessage.BackgroundBrush}" Foreground="{Binding ApplicationMessageService.LatestMessage.ForegroundBrush}">
      <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseDown">
          <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenMessageWindow" />
        </i:EventTrigger>
      </i:Interaction.Triggers>
      <TextBlock Text="{Binding ApplicationMessageService.LatestMessage.TypeString}" Foreground="{Binding ApplicationMessageService.LatestMessage.ForegroundBrush}" FontWeight="Bold" />
      <TextBlock Text="{Binding ApplicationMessageService.LatestMessage.Title}" Foreground="{Binding ApplicationMessageService.LatestMessage.ForegroundBrush}" TextTrimming="CharacterEllipsis" />
      <TextBlock Foreground="{Binding ApplicationMessageService.LatestMessage.ForegroundBrush}" Opacity="0.7" TextTrimming="CharacterEllipsis">
        <TextBlock.Text>
          <Binding Path="ApplicationMessageService.LatestMessage.Description">
            <Binding.Converter>
              <c:RemoveNewlineConverter />
            </Binding.Converter>
          </Binding>
        </TextBlock.Text>
      </TextBlock>
    </StatusBar>
    <ItemsControl ItemsSource="{Binding SettingsViewModel.Timelines}">
      <ItemsControl.Template>
        <ControlTemplate TargetType="ItemsControl">
          <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
            <ItemsPresenter />
          </ScrollViewer>
        </ControlTemplate>
      </ItemsControl.Template>
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Border Width="{Binding ElementName=self, Path=DataContext.SettingsViewModel.TimelineWidth}" BorderBrush="LightGray" BorderThickness="0, 0, 1, 0" Margin="0, 2, 0, 0">
            <Border.Visibility>
              <Binding Path="IsWindowed">
                <Binding.Converter>
                  <l:VisibilityAndBooleanConverter ConvertWhenFalse="Visible" ConvertWhenTrue="Collapsed" />
                </Binding.Converter>
              </Binding>
            </Border.Visibility>
            <u:TimelineControl Timeline="{Binding}" />
          </Border>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
  </DockPanel>
</metro:MetroWindow>
